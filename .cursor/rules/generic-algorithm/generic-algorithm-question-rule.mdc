# Question Generation Rule

## Format Requirements
1. Each algorithm problem should have 8 multiple-choice questions
2. Questions should be numbered (Q1, Q2, etc.)
3. Each question must have exactly 4 answer options, numbered 1-4
4. Questions should test deep understanding of algorithm mechanics, not just syntax
5. Include a mix of question types:
   - Base case identification
   - Calculation steps and sequences
   - Algorithm design decisions
   - Time/space complexity reasoning
   - Edge case handling
6. Both questions and answers must be created in separate file and be in markdown format

## Content Guidelines
1. Questions should progress from fundamental concepts to advanced understanding
2. Include at least one question about the base case
3. Include at least one question about a specific calculation example
4. Include at least one question about algorithm design decisions
5. Include at least one question about edge cases or corner cases
6. Avoid generic options for questions like "It's a bug", "It's a convention", "To prevent stack overflow", "To maintain consistency with mathematical conventions", " The algorithm has a bug", "Because the algorithm has an error", etc...
7. **Answer Distribution**: Ensure correct answers are evenly distributed across all four options (1, 2, 3, 4). For the 8 questions, aim for 2 questions per option to prevent clustering where some options never appear as correct answers
8. **Equal Option Length**: All four answer options should have approximately equal text length and complexity. Avoid having one option be notably shorter/simpler or longer/more detailed than others, as this creates unintentional bias where longer options appear more likely to be correct

## Answer Format
1. Create a separate answer file with the same name pattern
2. For each question, provide:
   - The correct answer number
   - A brief explanation (1-2 sentences) justifying why this answer is correct
3. Explanations should be clear and concise, highlighting the key insight
4. Distribute correct answers evenly across all four options (1, 2, 3, 4) - avoid repeatedly using the same option number

## Example Structure
```
Problem: [Algorithm Name] ([Technique])

Q1: [Question about fundamental concept]
1. [Option 1]
2. [Option 2]
3. [Option 3]
4. [Option 4]

Q2: [Question about calculation]
...

Answers:
Q1: [Correct option number]
[Brief explanation]
```

This rule helps ensure consistent, high-quality algorithm quiz questions that test both theoretical understanding and practical application of algorithms.

## Additional Rules: Answers and Markdown Format

- When generating answers for any set of questions, always include the corresponding question text itself directly above each answer and explanation.
- All generated files for questions and answers must use valid Markdown format with appropriate headings, lists, and code blocks as needed.
#### Answer Distribution Monitoring (CRITICAL)
**MANDATORY**: Monitor and enforce proper distribution of correct answers to prevent clustering:

1. **Distribution Target**:
   - For 20 questions: Each option (1,2,3,4) should be correct ~5 times (±1)
   - For 25 questions: Each option (1,2,3,4) should be correct ~6 times (±1)
   
2. **Anti-Clustering Rules**:
   - ❌ **AVOID**: No more than 3 consecutive questions with same correct answer
   - ❌ **AVOID**: No single option being correct more than 7 times in any set
   - ❌ **AVOID**: Any option being correct less than 3 times in any set
   
3. **Quality Check Process**:
   - **Step 1**: After generating all questions, count correct answers by option
   - **Step 2**: If distribution is uneven (example: 1-2, 2-3, 3-2, 4-1, 5-2, 6-2, 7-2, 8-2, 9-2, 10-2), REBALANCE
   - **Step 3**: Redistribute by moving questions between options while maintaining answer accuracy
   - **Step 4**: Verify no more than 2 consecutive questions have same correct answer
   
4. **Example BAD Distribution** (to avoid):
   ```
   Q1-2, Q2-3, Q3-2, Q4-1, Q5-2, Q6-2, Q7-2, Q8-2, Q9-2, Q10-2
   Count: Option 1: 1, Option 2: 7, Option 3: 1, Option 4: 0
   ```
   
5. **Example GOOD Distribution** (target):
   ```
   Q1-1, Q2-3, Q3-2, Q4-4, Q5-1, Q6-3, Q7-2, Q8-4, Q9-1, Q10-3
   Count: Option 1: 3, Option 2: 2, Option 3: 3, Option 4
   ```