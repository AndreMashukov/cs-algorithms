Problem: Best Time to Buy and Sell Stock II (Dynamic Programming)

Q1: 2
dp[i][0] represents the maximum profit achievable on day i when we don't currently hold any stock.

Q2: 3
dp[0][1] = -prices[0] because if we hold stock on day 0, we must have bought it, so we spent prices[0] money.

Q3: 2
dp[i-1][1] + prices[i] means we were holding stock from day i-1 and now sell it on day i for prices[i].

Q4: 2
dp[i-1][0] - prices[i] means we didn't hold stock on day i-1 and now buy stock on day i by spending prices[i].

Q5: 2
dp[1][0] = max(dp[0][0], dp[0][1] + prices[1]) = max(0, -1 + 2) = max(0, 1) = 1.

Q6: 2
We return dp[n-1][0] because ending without holding stock maximizes profit - we want to have sold all stocks by the end.

Q7: 3
'hold' represents the maximum profit when currently holding stock, and 'sold' represents the maximum profit when not holding stock.