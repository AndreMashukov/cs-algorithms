Problem: Best Time to Buy and Sell Stock II (DFS with Memoization)

Q1: In the recursive solution, what does the parameter 'holding' represent when it equals 1?
1. We have one transaction remaining
2. We currently own a share of stock
3. We can buy one more share
4. We sold stock on the previous day

Q2: When we are at day 2 with holding=0 and prices=[7,1,5,3,6,4], what are the two possible actions we can take?
1. Buy at price 5 or skip this day
2. Sell at price 5 or hold until next day
3. Buy at price 1 or buy at price 5
4. Sell at price 5 or buy at price 3

Q3: What is the meaning of the calculation "-prices[day] + dfs(day + 1, 1)" in the recursive solution?
1. We sell stock today and continue with holding stock
2. We buy stock today (spend money) and continue with holding stock
3. We skip today and check tomorrow's price
4. We calculate the loss from buying stock

Q4: In the memoization key format "day-holding", what would be the key when we're at day 3 and currently holding stock?
1. "3-0"
2. "3-1"
3. "holding-3"
4. "1-3"

Q5: If we're at the last day (day 5) with holding=1 and prices=[7,1,5,3,6,4], what should we do to maximize profit?
1. Buy more stock since it's the last chance
2. Hold the stock for future days
3. Sell the stock at price 4 since we can't hold beyond today
4. Skip this day and return 0

Q6: What happens in the base case when day >= prices.length?
1. We return the price of the last stock
2. We return 0 because no more transactions are possible
3. We return the maximum price seen so far
4. We return -1 to indicate invalid state

Q7: If we call dfs(0, 0) on prices=[1,2,3], what will be the first decision point in the recursion?
1. Whether to sell at price 1 or continue holding
2. Whether to buy at price 1 or skip day 0
3. Whether to buy at price 2 or price 3
4. Whether to hold for all 3 days or sell immediately