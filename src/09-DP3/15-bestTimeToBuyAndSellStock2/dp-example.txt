Problem: Best Time to Buy and Sell Stock II (DP Example)

Input: prices = [1, 2, 3]

Let's build the DP table step by step:

Initial Setup:
- dp[i][0] = max profit on day i when not holding stock
- dp[i][1] = max profit on day i when holding stock

Step 1: Initialize day 0
- dp[0][0] = 0 (not holding stock, no transactions yet)
- dp[0][1] = -1 (holding stock means we bought at price 1)

DP Table after day 0:
Day | Not Holding | Holding
  0 |      0      |   -1

Step 2: Process day 1 (price = 2)
- dp[1][0] = max(dp[0][0], dp[0][1] + prices[1])
           = max(0, -1 + 2) = max(0, 1) = 1
  (Either continue not holding, or sell stock bought on day 0)

- dp[1][1] = max(dp[0][1], dp[0][0] - prices[1])
           = max(-1, 0 - 2) = max(-1, -2) = -1
  (Either continue holding from day 0, or buy stock on day 1)

DP Table after day 1:
Day | Not Holding | Holding
  0 |      0      |   -1
  1 |      1      |   -1

Step 3: Process day 2 (price = 3)
- dp[2][0] = max(dp[1][0], dp[1][1] + prices[2])
           = max(1, -1 + 3) = max(1, 2) = 2
  (Either continue not holding, or sell stock on day 2)

- dp[2][1] = max(dp[1][1], dp[1][0] - prices[2])
           = max(-1, 1 - 3) = max(-1, -2) = -1
  (Either continue holding, or buy stock on day 2)

Final DP Table:
Day | Not Holding | Holding
  0 |      0      |   -1
  1 |      1      |   -1
  2 |      2      |   -1

Final Answer: dp[2][0] = 2

The optimal strategy is: Buy at price 1 (day 0), sell at price 3 (day 2) for profit of 2.