Dungeon Game - Recursive Solution Example

Let's trace through a simple 2x2 dungeon: [[-3, 5], [0, -4]]

Goal: Find minimum initial health for the knight to reach from top-left (0,0) to bottom-right (1,1).

Step-by-Step Execution:

1. Call dfs(0, 0)
   - Not in memo, need to compute
   - Not at destination (1,1), so continue
   
2. From (0,0), calculate rightHealth = dfs(0, 1)
   - Not in memo, need to compute
   - Not at destination, so continue
   
3. From (0,1), calculate rightHealth = dfs(0, 2)
   - Out of bounds! Return Infinity
   
4. From (0,1), calculate downHealth = dfs(1, 1)
   - This is the destination!
   - Base case: need Math.max(1, 1 - (-4)) = Math.max(1, 5) = 5
   - Memo["1,1"] = 5
   - Return 5
   
5. Back at (0,1):
   - rightHealth = Infinity
   - downHealth = 5
   - minHealthNeeded = min(Infinity, 5) = 5
   - currentMinHealth = Math.max(1, 5 - 5) = Math.max(1, 0) = 1
   - Memo["0,1"] = 1
   - Return 1
   
6. Back at (0,0), now calculate downHealth = dfs(1, 0)
   - Not in memo, need to compute
   
7. From (1,0), calculate rightHealth = dfs(1, 1)
   - Already in memo! Return 5
   
8. From (1,0), calculate downHealth = dfs(2, 0)
   - Out of bounds! Return Infinity
   
9. Back at (1,0):
   - rightHealth = 5
   - downHealth = Infinity
   - minHealthNeeded = min(5, Infinity) = 5
   - currentMinHealth = Math.max(1, 5 - 0) = Math.max(1, 5) = 5
   - Memo["1,0"] = 5
   - Return 5
   
10. Finally back at (0,0):
    - rightHealth = 1
    - downHealth = 5
    - minHealthNeeded = min(1, 5) = 1
    - currentMinHealth = Math.max(1, 1 - (-3)) = Math.max(1, 4) = 4
    - Memo["0,0"] = 4
    - Return 4

Answer: The knight needs minimum initial health of 4.

Path taken: (0,0) → (0,1) → (1,1)
Health changes: 4 → 1 (after -3) → 6 (after +5) → 2 (after -4)