Problem: Number of Digit One (DFS with Memoization)

Q1: When processing n=13 with digit DP, what happens when we're at position 0 (leftmost digit) 
and choose digit 2?
1. The recursion immediately returns 0
2. The tight constraint becomes false for all subsequent positions
3. The count is incremented by 2
4. The recursion skips to the last position

Q2: In the memoization key "pos,tight,count", what does the 'count' parameter represent?
1. Total 1s found in all numbers processed so far
2. Number of 1s in the current number being formed
3. Maximum number of 1s possible from this state
4. Number of recursive calls made

Q3: For n=213, when at position 1 with tight=true and we've chosen 2 for position 0, 
what is the maximum digit we can choose?
1. 9
2. 1
3. 2
4. 3

Q4: Why does the base case return 'count' instead of 0 or 1?
1. Because count contains the total number of 1s in the formed number
2. To accumulate results from all branches
3. To handle negative numbers
4. To optimize memory usage

Q5: When processing n=100, how many times will dfs(2, false, 1) be called with these exact parameters?
1. Never
2. Once
3. Multiple times with different paths
4. Exactly 10 times

Q6: What determines whether newTight becomes true or false in the recursion?
1. newTight = tight && (digit === maxDigit)
2. newTight = tight || (digit === 1)
3. newTight = !tight && (digit > 0)
4. newTight = (digit === 1)

Q7: For n=11, what is the total number of unique states (different parameter combinations) 
explored by the DFS?
1. 4
2. 11
3. Less than 20
4. Exactly 22