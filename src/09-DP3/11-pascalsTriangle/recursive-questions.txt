Problem: Pascal's Triangle (DFS with Memoization)

Q1: What does the DFS function compute when called with dfs(3)?
1. The 3rd number in Pascal's triangle
2. The entire 4th row (index 3) of Pascal's triangle
3. The sum of the 3rd row
4. The first 3 rows of Pascal's triangle

Q2: What are the base cases for the recursive function?
1. Only dfs(0) returns [1]
2. dfs(0) returns [1] and dfs(1) returns [1,1]
3. Only when rowIndex > numRows
4. When the row is empty

Q3: How does the function compute row 3 [1,3,3,1]?
1. By getting row 2 [1,2,1] and adding adjacent elements
2. By using a mathematical formula
3. By adding all previous rows
4. By multiplying row 2 by a constant

Q4: What is stored in the memoization map?
1. The sum of each row
2. Complete row arrays for each row index
3. Individual elements of the triangle
4. The number of elements in each row

Q5: For row index 2, what elements from row 1 are used to compute element at position 1?
1. Elements at positions 0 and 1 from row 1
2. Elements at positions 1 and 2 from row 1
3. Only element at position 1 from row 1
4. All elements from row 1

Q6: How does memoization improve performance in this algorithm?
1. It reduces the space complexity
2. It avoids recomputing the same rows multiple times
3. It makes the algorithm iterative instead of recursive
4. It optimizes the addition operations

Q7: What is the structure of each row in Pascal's triangle?
1. All elements are the same value
2. Starts and ends with 1, middle elements are sums of elements above
3. Elements increase linearly from left to right
4. Elements follow a Fibonacci sequence